import{_ as o,r as i,o as d,c,b as n,e as s,a as e,d as r}from"./app.1e729f30.js";const h={},t=s('<h1 id="main" tabindex="-1"><a class="header-anchor" href="#main" aria-hidden="true">#</a> <code>main</code></h1><p>This channel provides basic information.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><p>none</p><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><h3 id="notification" tabindex="-1"><a class="header-anchor" href="#notification" aria-hidden="true">#</a> <code>notification</code></h3>',6),l=e("p",null,"Occurs when you receive a notification.",-1),u=e("h3",{id:"mention",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mention","aria-hidden":"true"},"#"),r(),e("code",null,"mention")],-1),f=e("p",null,"Occurs when a message is sent.",-1),m=e("h3",{id:"reply",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reply","aria-hidden":"true"},"#"),r(),e("code",null,"reply")],-1),p=e("p",null,"Occurs when a reply is received.",-1),_=e("h3",{id:"renote",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#renote","aria-hidden":"true"},"#"),r(),e("code",null,"renote")],-1),g=e("p",null,"Occurs when one of your notes is renoted.",-1),w=e("h3",{id:"follow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#follow","aria-hidden":"true"},"#"),r(),e("code",null,"follow")],-1),b=e("p",null,"Occurs when you follow another user.",-1),x=e("h3",{id:"followed",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#followed","aria-hidden":"true"},"#"),r(),e("code",null,"followed")],-1),O=e("p",null,"Occurs when another user follows you.",-1),v=e("h3",{id:"unfollow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unfollow","aria-hidden":"true"},"#"),r(),e("code",null,"unfollow")],-1),N=e("p",null,"Occurs when you unfollow another user.",-1),M=e("h3",{id:"messagingmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#messagingmessage","aria-hidden":"true"},"#"),r(),e("code",null,"messagingMessage")],-1),y=s('<p>Occurs when a chat message is received.</p><h3 id="readallnotifications" tabindex="-1"><a class="header-anchor" href="#readallnotifications" aria-hidden="true">#</a> <code>readAllNotifications</code></h3><p>Occurs when all notifications have been read.</p><h3 id="unreadnotification" tabindex="-1"><a class="header-anchor" href="#unreadnotification" aria-hidden="true">#</a> <code>unreadNotification</code></h3><p>Occurs when there is a new notification.</p><h3 id="unreadmention" tabindex="-1"><a class="header-anchor" href="#unreadmention" aria-hidden="true">#</a> <code>unreadMention</code></h3><p>Occurs when there is a new mention.</p><h3 id="readallunreadmentions" tabindex="-1"><a class="header-anchor" href="#readallunreadmentions" aria-hidden="true">#</a> <code>readAllUnreadMentions</code></h3><p>Occurs when all mentions have been seen.</p><h3 id="unreadspecifiednote" tabindex="-1"><a class="header-anchor" href="#unreadspecifiednote" aria-hidden="true">#</a> <code>unreadSpecifiedNote</code></h3><p>Occurs when there is a new direct note.</p><h3 id="readallunreadspecifiednotes" tabindex="-1"><a class="header-anchor" href="#readallunreadspecifiednotes" aria-hidden="true">#</a> <code>readAllUnreadSpecifiedNotes</code></h3><p>Occurs when all direct notes have been read.</p><h3 id="unreadmessagingmessage" tabindex="-1"><a class="header-anchor" href="#unreadmessagingmessage" aria-hidden="true">#</a> <code>unreadMessagingMessage</code></h3><p>Occurs when there is a new chat message.</p><h3 id="readallmessagingmessages" tabindex="-1"><a class="header-anchor" href="#readallmessagingmessages" aria-hidden="true">#</a> <code>readAllMessagingMessages</code></h3><p>Occurs when all chat messages have been read.</p><h2 id="operations" tabindex="-1"><a class="header-anchor" href="#operations" aria-hidden="true">#</a> Operations</h2><p>none</p>',19);function $(V,S){const a=i("MkSchemaViewer");return d(),c("div",null,[t,n(a,{schema:{$ref:"ocean://Notification"}}),l,u,n(a,{schema:{$ref:"ocean://Note"}}),f,m,n(a,{schema:{$ref:"ocean://Note"}}),p,_,n(a,{schema:{$ref:"ocean://Note"}}),g,w,n(a,{schema:{$ref:"ocean://User"}}),b,x,n(a,{schema:{$ref:"ocean://User"}}),O,v,n(a,{schema:{$ref:"ocean://User"}}),N,M,n(a,{schema:{$ref:"ocean://MessagingMessage"}}),y])}var k=o(h,[["render",$],["__file","main.html.vue"]]);export{k as default};
